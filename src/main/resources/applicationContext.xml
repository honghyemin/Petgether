<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd">

	<!-- base-package 설정위치 포함 하위패키지 경로에서 모두 검색처리 여러개 선언해도 되고, 구분자(빈칸, 콤마, 세미콜른 
		등) -->

	<context:component-scan
		base-package="kr.co.petgether" />
	<!-- === Spring JDBC 관련 설정 ===== -->

	<!-- DataSource 설정 -->
	<bean id="dataSource"
		class="org.apache.commons.dbcp2.BasicDataSource"
		destroy-method="close">
		<!-- log4g관련 설정 -->	
		<property name="driverClassName"
			value="oracle.jdbc.OracleDriver" />
		<property name="url"
			value="jdbc:oracle:thin:@localhost:1521:xe" />
		<property name="username" value="BOOKEX" />
		<property name="password" value="BOOKEX" />
	</bean>

	<!-- 스프링JDBC : JdbcTemplate 객체 생성 -->
	<bean id="jdbcTemplate"
		class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<!-- 스프링-마이바티스 연동 설정 -->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- dataSource : DB연결해줌 -->
		<property name="dataSource" ref="dataSource" />
		<!-- configFIle의 위치 추가해준다 -->
		<property name="configLocation"
			value="classpath:mybatis-config.xml"></property>
		<!-- config파일에서 매퍼 연결삭제하고 bean으로 등록해서 동작하는지 확인해보기 -->
		<!-- <property name="mapperLocations" value="classpath:mappings/BoardMapper.xml"></property> -->
	</bean>

	<!-- 데이터베이스 연결관력 커넥션 사용, 매퍼 사용, sqlSessionTemplat객체를 사용해서 프로그래밍 하면 된다. -->
	<bean class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory"></constructor-arg>
	</bean>
	
	<!-- 스프링에서 기본으로 제공하는 multipartResolver는 CommonsMultipartResolver 이므로, 순수한 
		multipartResolver를 사용하기 위해 빈 이름으로 "multipartResolver"를 등록해야함 + 프로퍼티를 이용 최대 
		가능한 업로드 사이즈 지정함 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="100000000" />
		<property name="maxInMemorySize" value="100000000" />
	</bean>


</beans>